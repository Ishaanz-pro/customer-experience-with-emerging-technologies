# -*- coding: utf-8 -*-
"""Reimagining customer experience with emerging technologies.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1sJ1n76w8aViDHocu_mQm0zIeerwqi5qt
"""
import streamlit as st
import pandas as pd

# Load data and prepare
df = pd.read_csv("retail_products_100.csv")
df["numeric_price"] = df["price"].str.replace("₹", "").str.replace(",", "").astype(int)

# Page config and dark background
st.set_page_config(page_title="SmartShop AI", layout="wide")
st.markdown("""
<style>
body {
    background-color: #0d1117;
    color: #e6edf3;
}
.stApp {
    background-color: #0d1117;
    color: #e6edf3;
}
.chat-input {
    background-color: #161b22 !important;
    color: white;
}
h1, h2, h3 {
    color: #58a6ff;
}
</style>
""", unsafe_allow_html=True)

# Title
st.title("🛍️ SmartShop – Your AI Shopping Assistant")
st.markdown("#### Type your query like `red gym shoes under 2000` and I'll fetch the best options for you!")

# Chat-based input
query = st.chat_input("What are you looking for?")

# Generate smart AI-style response
def generate_response(q):
    q = q.lower()
    if "under" in q:
        return "💸 Great! Let me find budget-friendly options for you."
    if "gym" in q:
        return "🏋️‍♀️ Looking for gym gear? You're in shape!"
    if "eco" in q or "recycled" in q:
        return "🌿 Awesome! You care about the planet!"
    return "🛍️ Here's what I think you'll like."

# Filter products based on query
def filter_products(q):
    q = q.lower()
    result = df.copy()
    if "gym" in q:
        result = result[result["description"].str.lower().str.contains("gym")]
    if "red" in q:
        result = result[result["color"].str.lower().str.contains("red")]
    for amt in [1000, 1500, 2000, 2500, 3000]:
        if f"under {amt}" in q:
            result = result[result["numeric_price"] <= amt]
            break
    return result.head(9)

# Display interaction
if query:
    with st.chat_message("user"):
        st.markdown(query)

    with st.chat_message("assistant"):
        st.markdown(generate_response(query))

    results = filter_products(query)
    if results.empty:
        st.warning("❌ No matching products found. Try changing keywords.")
    else:
        st.subheader("🛒 Products You Might Love:")
        cols = st.columns(3)
        for i, (_, row) in enumerate(results.iterrows()):
            with cols[i % 3]:
                try:
                    st.image(row["image_url"], width=200)
                except:
                    st.image("https://via.placeholder.com/200x200?text=No+Image", width=200)
                st.markdown(f"**{row['title']}**")
                st.markdown(f"💰 ₹{row['numeric_price']}  \n🏷️ {row['category']}")
                st.markdown(f"🎨 {row['color']} | 🧵 {row['material']}")
                st.markdown(f"⭐ {row['rating']}/5")
                st.caption(row["description"])

st.markdown("---")
st.caption("🚀 Built with ❤️ by Team SmartShop for Retail Hackathon 2025")
