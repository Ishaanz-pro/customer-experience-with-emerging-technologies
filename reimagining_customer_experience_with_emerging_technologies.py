# -*- coding: utf-8 -*-
"""Reimagining customer experience with emerging technologies.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1sJ1n76w8aViDHocu_mQm0zIeerwqi5qt
"""

import streamlit as st
import pandas as pd

# Load product dataset
df = pd.read_csv("retail_products_100.csv")

st.set_page_config(page_title="🛍️ SmartShop Assistant", layout="wide")
st.title("🛍️ SmartShop – AI Shopping Assistant")
st.markdown("Describe what you're looking for (e.g. *red waterproof gym shoes under ₹3000*)")

# Input query
query = st.text_input("🧠 Your Shopping Query:")

# Simulate AI Response
def generate_response(q):
    q = q.lower()
    if "budget" in q or "under ₹3000" in q:
        return "🧾 Here are some budget-friendly options under ₹3000:"
    elif "gym" in q:
        return "💪 These shoes are great for gym and fitness training!"
    elif "eco" in q or "recycled" in q:
        return "🌱 Here are eco-friendly products just for you:"
    else:
        return "🎯 Here are some smart recommendations based on your input:"

# Filter logic (mock intent parsing)
def filter_products(q):
    q = q.lower()
    result = df.copy()
    if "gym" in q:
        result = result[result["description"].str.lower().str.contains("gym")]
    if "red" in q:
        result = result[result["color"].str.lower().str.contains("red")]
    if "under ₹3000" in q or "budget" in q:
        result = result[result["price"].str.replace("₹", "").astype(int) < 3000]
    return result.head(9)

# Handle user input
if query:
    st.subheader("🤖 AI Assistant:")
    st.markdown(generate_response(query))

    matches = filter_products(query)
    if matches.empty:
        st.warning("No matching products found.")
    else:
        st.subheader("🛍️ Products You May Like:")
        cols = st.columns(3)
        for i, (_, row) in enumerate(matches.iterrows()):
            with cols[i % 3]:
                st.image(row["image_url"], width=180)
                st.markdown(f"**{row['title']}**")
                st.markdown(f"💰 {row['price']}  \n🏷️ {row['category']}")
                st.markdown(f"🎨 {row['color']} | 🧵 {row['material']}")
                st.markdown(f"⭐ {row['rating']}/5")
                st.caption(row['description'])

st.markdown("---")
st.caption("Built by Team SmartShop for Retail Hackathon 2025")